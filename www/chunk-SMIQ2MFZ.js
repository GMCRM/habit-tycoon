import{Fa as y,Ga as m,b}from"./chunk-DBK4KFI5.js";import{a as _,b as g,j as n}from"./chunk-VI73JOY6.js";var F=(()=>{let f=class f{constructor(){this.supabase=y(m.supabaseUrl,m.supabaseKey)}getSocialFeed(r){return n(this,null,function*(){try{let{data:e,error:s}=yield this.supabase.from("social_posts").select(`
          *,
          user_profile:user_profiles(id, name, avatar_url),
          likes:social_likes(user_id),
          likes_count:social_likes(count)
        `).order("created_at",{ascending:!1}).limit(50);if(s)throw s;return(e||[]).map(i=>g(_({},i),{likesCount:i.likes_count?.[0]?.count||0,isLiked:i.likes?.some(o=>o.user_id===r)||!1}))}catch(e){return console.error("Error loading social feed:",e),[]}})}createPost(r,e,s="general",i){return n(this,null,function*(){let{error:o}=yield this.supabase.from("social_posts").insert({user_id:r,content:e,type:s,metadata:i});if(o)throw o})}shareAchievement(r,e){return n(this,null,function*(){let{data:s}=yield this.supabase.from("habit_completions").select(`
        *,
        habit_business:habit_businesses(business_name, business_icon, earnings_per_completion)
      `).eq("user_id",r).order("created_at",{ascending:!1}).limit(1).single(),i=e||`Just completed my ${s?.habit_business?.business_name} habit! \u{1F4AA}`;yield this.createPost(r,i,"achievement",{habit_business_id:s?.habit_business_id,earnings:s?.habit_business?.earnings_per_completion})})}likePost(r,e){return n(this,null,function*(){let{error:s}=yield this.supabase.from("social_likes").insert({post_id:r,user_id:e});if(s)throw s})}unlikePost(r,e){return n(this,null,function*(){let{error:s}=yield this.supabase.from("social_likes").delete().eq("post_id",r).eq("user_id",e);if(s)throw s})}getFriends(r){return n(this,null,function*(){try{let{data:e,error:s}=yield this.supabase.from("friendships").select("*").eq("user_id",r).eq("status","accepted"),{data:i,error:o}=yield this.supabase.from("friendships").select("*").eq("friend_id",r).eq("status","accepted");s&&console.error("Error loading outgoing friends:",s),o&&console.error("Error loading incoming friends:",o);let t=[...e||[],...i||[]];return t.length===0?[]:(yield Promise.all(t.map(l=>n(this,null,function*(){let p=l.user_id===r?l.friend_id:l.user_id;console.log("\u{1F50D} Fetching friend profile for user_id:",p);let{data:d,error:h}=yield this.supabase.rpc("get_user_profile_for_friend_request",{user_uuid:p});console.log("\u{1F4CA} Friend profile fetch result:",{friendProfileData:d,profileError:h}),console.log("\u{1F4CA} Raw friendProfileData type:",typeof d),console.log("\u{1F4CA} Raw friendProfileData value:",JSON.stringify(d,null,2)),h&&console.error("\u274C Error loading friend profile:",h);let u;return Array.isArray(d)&&d.length>0?(u=d[0],console.log("\u2705 Using first element from array:",u)):d&&!Array.isArray(d)?(u=d,console.log("\u2705 Using direct object:",u)):(u={id:p,name:"Unknown User",email:"unknown@email.com",cash:0,net_worth:0},console.log("\u274C Using fallback profile:",u)),console.log("\u2705 Final friend profile:",u),g(_({},l),{friend_profile:u})})))).filter((l,p,d)=>p===d.findIndex(h=>h.friend_profile.id===l.friend_profile.id))}catch(e){return console.error("Error loading friends:",e),[]}})}getPendingRequests(r){return n(this,null,function*(){try{let{data:e,error:s}=yield this.supabase.from("friendships").select("*").eq("friend_id",r).eq("status","pending");return s?(console.error("Error loading pending requests:",s),[]):!e||e.length===0?[]:yield Promise.all(e.map(o=>n(this,null,function*(){console.log("\u{1F50D} Fetching profile for user_id:",o.user_id);let{data:t,error:c}=yield this.supabase.rpc("get_user_profile_for_friend_request",{user_uuid:o.user_id});console.log("\u{1F4CA} Profile fetch result:",{profileData:t,profileError:c,dataType:typeof t,isArray:Array.isArray(t)}),c&&console.error("\u274C Error loading sender profile:",c);let a;return Array.isArray(t)&&t.length>0?a=t[0]:a={id:o.user_id,name:"Unknown User",email:"unknown@email.com"},console.log("\u2705 Using sender profile:",a),g(_({},o),{sender_profile:a})})))}catch(e){return console.error("Error loading pending requests:",e),[]}})}getSentRequests(r){return n(this,null,function*(){try{let{data:e,error:s}=yield this.supabase.from("friendships").select("*").eq("user_id",r).eq("status","pending");return s?(console.error("Error loading sent requests:",s),[]):!e||e.length===0?[]:yield Promise.all(e.map(o=>n(this,null,function*(){let{data:t,error:c}=yield this.supabase.rpc("get_user_profile_for_friend_request",{user_uuid:o.friend_id});c&&console.error("Error loading recipient profile:",c);let a;return Array.isArray(t)&&t.length>0?a=t[0]:a={id:o.friend_id,name:"Unknown User",email:"unknown@email.com"},g(_({},o),{recipient_profile:a})})))}catch(e){return console.error("Error loading sent requests:",e),[]}})}sendFriendRequest(r,e){return n(this,null,function*(){let{data:s,error:i}=yield this.supabase.rpc("search_users_for_friend_request",{search_term:e});if(i)throw console.error("Search error:",i),new Error("Error searching for user");if(!s||s.length===0)throw new Error("User not found");let o=s.find(a=>a.email===e);if(o||(o=s[0]),o.id===r)throw new Error("You cannot send a friend request to yourself");let{data:t}=yield this.supabase.from("friendships").select("id, status").or(`and(user_id.eq.${r},friend_id.eq.${o.id}),and(user_id.eq.${o.id},friend_id.eq.${r})`).maybeSingle();if(t){if(t.status==="accepted")throw new Error("You are already friends with this user");if(t.status==="pending")throw new Error("Friend request already sent or pending");if(t.status==="declined"){let{error:a}=yield this.supabase.from("friendships").delete().eq("id",t.id);if(a)throw console.error("Error deleting declined friendship:",a),new Error("Error resending friend request")}}let{error:c}=yield this.supabase.from("friendships").insert({user_id:r,friend_id:o.id,status:"pending"});if(c)throw c})}acceptFriendRequest(r){return n(this,null,function*(){let{error:e}=yield this.supabase.from("friendships").update({status:"accepted"}).eq("id",r);if(e)throw e})}declineFriendRequest(r){return n(this,null,function*(){let{error:e}=yield this.supabase.from("friendships").update({status:"declined"}).eq("id",r);if(e)throw e})}removeFriend(r,e){return n(this,null,function*(){let{error:s}=yield this.supabase.from("friendships").delete().or(`and(user_id.eq.${r},friend_id.eq.${e}),and(user_id.eq.${e},friend_id.eq.${r})`);if(s)throw s})}getActiveChallenges(r){return n(this,null,function*(){try{let{data:e,error:s}=yield this.supabase.from("challenges").select(`
          *,
          creator_profile:user_profiles!challenges_creator_id_fkey(name),
          participants:challenge_participants(user_id),
          participants_count:challenge_participants(count)
        `).eq("is_active",!0).gte("end_date",new Date().toISOString()).order("created_at",{ascending:!1});if(s)throw s;return(e||[]).map(i=>g(_({},i),{participants_count:i.participants_count?.[0]?.count||0,is_participant:i.participants?.some(o=>o.user_id===r)||!1}))}catch(e){return console.error("Error loading challenges:",e),[]}})}createChallenge(r,e,s,i){return n(this,null,function*(){let o=new Date,t=new Date;t.setDate(o.getDate()+i);let{data:c,error:a}=yield this.supabase.from("challenges").insert({creator_id:r,title:e,description:s,duration_days:i,start_date:o.toISOString(),end_date:t.toISOString(),is_active:!0}).select().single();if(a)throw a;yield this.joinChallenge(c.id,r)})}joinChallenge(r,e){return n(this,null,function*(){let{error:s}=yield this.supabase.from("challenge_participants").insert({challenge_id:r,user_id:e});if(s)throw s})}sendHabitPoke(r,e,s){return n(this,null,function*(){try{let{data:i,error:o}=yield this.supabase.rpc("send_habit_poke",{from_user_id:r,to_user_id:e,business_name:s});if(o)throw console.error("Error sending habit poke:",o),o;if(!i.success)throw new Error(i.error)}catch(i){throw console.error("Error in sendHabitPoke:",i),new Error("Failed to send reminder. Please try again.")}})}sendStockholderReminder(r,e,s,i){return n(this,null,function*(){try{console.log("\u{1F50D} Social service sending reminder:",{fromUserId:r,toUserId:e,businessName:s,fromUserName:i});let{data:o,error:t}=yield this.supabase.rpc("send_stockholder_reminder",{from_user_id:r,to_user_id:e,business_name:s,from_user_name:i});if(console.log("\u{1F50D} RPC response:",{data:o,error:t}),t)throw console.error("\u274C RPC Error sending stockholder reminder:",t),new Error(`Database error: ${t.message}`);if(o&&!o.success)throw console.error("\u274C Function returned error:",o),new Error(o.error||"Function execution failed");console.log("\u2705 Reminder sent successfully")}catch(o){throw console.error("\u274C Error in sendStockholderReminder:",o),new Error(`Failed to send stockholder reminder: ${o?.message||"Unknown error"}`)}})}getUserPokes(r){return n(this,null,function*(){try{console.log("\u{1F50D} SocialService: Loading pokes for user:",r);let{data:e,error:s}=yield this.supabase.rpc("get_user_social_notifications",{user_uuid:r});if(s)throw console.error("\u274C Error loading pokes:",s),s;console.log("\u{1F50D} Raw pokes data from database:",e),console.log("\u{1F50D} First poke structure:",e?.[0]);let i=(e||[]).map(o=>g(_({},o),{id:o.poke_id,type:o.poke_type}));return console.log("\u{1F50D} Transformed pokes data:",i),console.log("\u{1F50D} First transformed poke:",i?.[0]),i}catch(e){return console.error("Error loading pokes:",e),[]}})}markPokeAsRead(r){return n(this,null,function*(){try{console.log("\u{1F50D} SocialService: Marking poke as read:",r);let{error:e}=yield this.supabase.from("social_pokes").update({is_read:!0}).eq("id",r);if(e)throw console.error("\u274C Database error:",e),e;console.log("\u2705 SocialService: Successfully marked poke as read")}catch(e){throw console.error("\u274C SocialService: Error marking poke as read:",e),e}})}deleteNotification(r){return n(this,null,function*(){try{if(console.log("\u{1F5D1}\uFE0F SocialService: Deleting notification:",r),console.log("\u{1F50D} Notification ID type:",typeof r),console.log("\u{1F50D} Notification ID valid:",!!r),!r)throw new Error("Notification ID is required for deletion");let{data:e,error:s}=yield this.supabase.from("social_pokes").delete().eq("id",r).select();if(console.log("\u{1F50D} Delete operation result:",{data:e,error:s}),s)throw console.error("\u274C Database error deleting notification:",s),s;if(!e||e.length===0)throw console.warn("\u26A0\uFE0F No notification was deleted - ID might not exist:",r),new Error("Notification not found or already deleted");console.log("\u2705 SocialService: Notification deleted successfully:",e)}catch(e){throw console.error("\u274C SocialService: Error deleting notification:",e),e}})}getFriendsLeaderboard(r){return n(this,null,function*(){try{let{data:e,error:s}=yield this.supabase.from("user_profiles").select("*").eq("id",r).single();if(s)return console.error("Error loading user profile:",s),[{id:r,name:"You",avatar_url:"",net_worth:0,cash:0,rank:1}];let i=e.cash||0;try{let{data:c}=yield this.supabase.from("habit_businesses").select(`
            id, business_type_id, level,
            business_types!inner(base_cost)
          `).eq("user_id",r);if(c){let a=c.reduce((l,p)=>{let h=(p.business_types?.base_cost||0)*.7;return l+h},0);i+=a}}catch(c){console.error("Error calculating business value:",c)}let o=yield this.getFriends(r),t=[{id:e.id,name:"You",avatar_url:e.avatar_url||"",net_worth:e.net_worth||0,cash:e.cash||0,rank:1}];if(o&&o.length>0){let c=o.map(a=>({id:a.friend_profile.id,name:a.friend_profile.name,avatar_url:a.friend_profile.avatar_url||"",net_worth:a.friend_profile.net_worth||0,cash:a.friend_profile.cash||0,rank:0}));t.push(...c),t.sort((a,l)=>l.net_worth-a.net_worth),t.forEach((a,l)=>{a.rank=l+1})}return t}catch(e){return console.error("Error loading friends leaderboard:",e),[{id:r,name:"You",avatar_url:"",net_worth:0,cash:0,rank:1}]}})}};f.\u0275fac=function(e){return new(e||f)},f.\u0275prov=b({token:f,factory:f.\u0275fac,providedIn:"root"});let w=f;return w})();export{F as a};
